// JavaScript Scope
// The scope is what defines the access to JavaScript variables. In JavaScript, variables 
// can belong to the global scope or to the local scope. Global variables are variables that 
// belong in the global scope and are accessible from anywhere in the program.



// ভ্যারিয়েবল ডিক্লারেশনের পার্থক্য:
    // জাভাস্ক্রিপ্টে ভ্যারিয়েবল ডিক্লারেশনের পদ্ধতি অন্যান্য প্রোগ্রামিং ভাষার থেকে ভিন্ন।
    // var: ভ্যারিয়েবলকে ফাংশন স্কোপে ডিক্লেয়ার করে।
    // let: ভ্যারিয়েবলকে ব্লক স্কোপে ডিক্লেয়ার করে, অর্থাৎ {} এর মধ্যে সীমাবদ্ধ থাকে।
    // গ্লোবাল স্কোপ: কোনো অপারেটর ছাড়াই ভ্যারিয়েবল ডিক্লেয়ার করা যায়, যা গ্লোবাল স্কোপে চলে যায়। কিন্তু এটি খারাপ অভ্যাস এবং সর্বদা এড়িয়ে চলা উচিত।
   
// টাইপ চেকিং:
    // ভ্যারিয়েবলের টাইপ যাচাই করার জন্য typeof অপারেটর ব্যবহার করা উচিত।
    // এটি নিশ্চিত করে যে ভ্যারিয়েবলের টাইপটি প্রত্যাশিত কি না, যেমন number, string, boolean, ইত্যাদি।
    // সমতা চেক:

// ==: শুধু ভ্যালু চেক করে। এটি টাইপ পরিবর্তন করে (type coercion) দুই ভ্যালু তুলনা করে।
    // উদাহরণ: "5" == 5 -> true
// ===: টাইপ এবং ভ্যালু দুটোই চেক করে। টাইপ পরিবর্তন করে না।
    // উদাহরণ: "5" === 5 -> false
// এই অপারেটরগুলো শুধুমাত্র প্রিমিটিভ টাইপের (যেমন, সংখ্যা, স্ট্রিং, বুলিয়ান) ক্ষেত্রে ব্যবহার করা উচিত, অবজেক্টের ক্ষেত্রে নয়।






